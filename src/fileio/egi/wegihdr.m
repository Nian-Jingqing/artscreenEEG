function status = wegihdr(fid,header_array,EventCodes)% status = wt_fragger_hdr(fid,header_array,EventCodes)%% write a header to a new NSFragger file%%          fid: output file id% header_array: [version, year, month, day, hour, min, sec, msec...%                rate, # channels, gain, bits, range, # samples, # events]%   EventCodes: event codes% % See also: REGIHDR% Adapted from wt_fragger_hdr% Release 1.0 2/9/97 R.S. % Copyright (C) 1997 Ramesh Srinivasan%% This program is free software: you can redistribute it and/or modify% it under the terms of the GNU General Public License as published by% the Free Software Foundation, either version 3 of the License, or% (at your option) any later version.%% This program is distributed in the hope that it will be useful,% but WITHOUT ANY WARRANTY; without even the implied warranty of% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the% GNU General Public License for more details.%% You should have received a copy of the GNU General Public License% along with this program.  If not, see <http://www.gnu.org/licenses/>.if nargin < 3, error('insufficient input arguments'); endif fid < 1 , error('you have provided an invalid file'); endif length(header_array) ~= 15, error('Invalid header_array'); endfwrite(fid,header_array(1),'int32');        % versionfwrite(fid,header_array(2),'int16');        % yearfwrite(fid,header_array(3),'int16');        % monthfwrite(fid,header_array(4),'int16');        % dayfwrite(fid,header_array(5),'int16');        % hourfwrite(fid,header_array(6),'int16');        % minfwrite(fid,header_array(7),'int16');        % secfwrite(fid,header_array(8),'int32');        % msecfwrite(fid,header_array(9),'int16');        % ratefwrite(fid,header_array(10),'int16');       % # channelsfwrite(fid,header_array(11),'int16');       % gainfwrite(fid,header_array(12),'int16');       % bitsfwrite(fid,header_array(13),'int16');       % rangefwrite(fid,header_array(14),'int32');       % # samplesfwrite(fid,header_array(15),'int16');       % # eventsfor i = 1:header_array(15), fwrite(fid,EventCodes(i),'char'); endstatus = 1;